<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="24.11.1.0">
<procedure name="main">
<interface/>
<body>
<l>read_image(Imageshape,'tubiao1.jpg')</l>
<l>get_image_size(Imageshape, Widthshape, Heightshape)</l>
<l>dev_open_window_fit_image(Imageshape,0,0,-1,-1,WindowHandle3)</l>
<l>dev_set_color('red')</l>
<l>dev_set_line_width(3)</l>
<l>dev_display(Imageshape)</l>
<l>rgb1_to_gray(Imageshape, GrayImageshape)</l>
<c>*阈值分割</c>
<l>threshold(GrayImageshape, Regionshape, 200, 255)</l>
<c>*连接区域</c>
<l>connection(Regionshape, ConnectedRegionsshape)</l>
<c>*数目</c>
<l>count_obj (ConnectedRegionsshape, Number)</l>
<c>*挑选</c>
<l>select_shape(ConnectedRegionsshape, SelectedRegionsshape, 'area', 'and', 12000, 32000)</l>
<l>count_obj (SelectedRegionsshape, Number1)</l>
<c>*填充</c>
<l>fill_up(SelectedRegionsshape, RegionFillUpshape)</l>
<c>*膨胀</c>
<l>dilation_circle(RegionFillUpshape, RegionDilationshape, 5.5)</l>
<c>*抠图</c>
<l>reduce_domain(GrayImageshape, RegionDilationshape, ImageReducedshape)</l>
<c></c>
<c>*创建模版   模板 金字塔 图案的最小旋转 旋转角度的大小 步长 图案最小比例 图案的最大比例 缩放步长（分辨率）</c>
<l>create_scaled_shape_model(ImageReducedshape, 5, rad(-180), rad(180), 'auto', 0.2, 1.1, 'auto', 'none', 'ignore_global_polarity', 40, 10, ModelIDshape)</l>
<c>*获取模版轮廓</c>
<l>get_shape_model_contours(ModelContoursshape, ModelIDshape, 1)</l>
<c>*显示模版轮廓到模版位置</c>
<l>area_center(RegionFillUpshape,Areashape, Rowshape, Columnshape)</l>
<c>*仿射变换</c>
<l>vector_angle_to_rigid(0, 0, 0, Rowshape, Rowshape, 0, HomMat2Dshape)</l>
<c>*应用任意仿射二维变换到XLD轮廓。</c>
<l>affine_trans_contour_xld(ModelContoursshape, ContoursAffineTransshape, HomMat2Dshape)</l>
<l>dev_display(Imageshape)</l>
<l>dev_display(ContoursAffineTransshape)</l>
<c></c>
<l>stop()</l>
<l>dev_close_window()</l>
<l>read_image(Imageshape,'tubiao3.png')</l>
<l>dev_open_window_fit_image(Imageshape,0,0,-1,-1,WindowHandle2)</l>
<l>rgb1_to_gray(Imageshape, GrayImageshape)</l>
<l>dev_display(Imageshape)</l>
<c>*匹配模版</c>
<l>find_scaled_shape_model(GrayImageshape, ModelIDshape, rad(-180), rad(180), 0.2, 1.1, 0.3, 0, 0.5, 'least_squares', 5, 0.5, Rowshape1, Columnshape1, Angleshape, Scalesahpe, Scoreshape)</l>
<l>count_obj (SelectedRegionsshape, Number1)</l>
<c>*循环显示匹配出来的模版区域轮廓</c>
<l>for i :=0 to |Scoreshape| - 1  by 1</l>
<c>    *生成相同二维变换的齐次变换矩阵。</c>
<l>    hom_mat2d_identity(HomMat2DIdentityshape)</l>
<c>    *向齐次二维变换矩阵添加一个平移。</c>
<l>    hom_mat2d_translate(HomMat2DIdentityshape, Rowshape1[i],Columnshape1[i],HomMat2DTranslateshape)</l>
<c>    *添加一个旋转到齐次二维变换矩阵。</c>
<l>    hom_mat2d_rotate(HomMat2DTranslateshape, Angleshape[i], Rowshape1[i], Columnshape1[i], HomMat2DRotateshape)</l>
<c>    *向齐次二维变换矩阵添加缩放。</c>
<l>    hom_mat2d_scale(HomMat2DRotateshape, Scalesahpe[i],Scalesahpe[i],Rowshape1[i], Columnshape1[i],HomMat2DScaleshape)</l>
<c>    *应用任意仿射二维变换到XLD轮廓。</c>
<l>    affine_trans_contour_xld(ModelContoursshape, ContoursAffineTransshape, HomMat2DScaleshape)</l>
<l>    dev_display(ContoursAffineTransshape)</l>
<l>#    stop()</l>
<l>endfor</l>
<c></c>
<l>clear_shape_model(ModelIDshape)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
